// Code generated by protoc-gen-go. DO NOT EDIT.
// source: notice.proto

package rpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type NoticeRequest struct {
	Command              string   `protobuf:"bytes,1,opt,name=command,proto3" json:"command,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NoticeRequest) Reset()         { *m = NoticeRequest{} }
func (m *NoticeRequest) String() string { return proto.CompactTextString(m) }
func (*NoticeRequest) ProtoMessage()    {}
func (*NoticeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_642492014393dbdb, []int{0}
}

func (m *NoticeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NoticeRequest.Unmarshal(m, b)
}
func (m *NoticeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NoticeRequest.Marshal(b, m, deterministic)
}
func (m *NoticeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NoticeRequest.Merge(m, src)
}
func (m *NoticeRequest) XXX_Size() int {
	return xxx_messageInfo_NoticeRequest.Size(m)
}
func (m *NoticeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NoticeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NoticeRequest proto.InternalMessageInfo

func (m *NoticeRequest) GetCommand() string {
	if m != nil {
		return m.Command
	}
	return ""
}

type NoticeResponse struct {
	Output               string   `protobuf:"bytes,1,opt,name=output,proto3" json:"output,omitempty"`
	Error                string   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NoticeResponse) Reset()         { *m = NoticeResponse{} }
func (m *NoticeResponse) String() string { return proto.CompactTextString(m) }
func (*NoticeResponse) ProtoMessage()    {}
func (*NoticeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_642492014393dbdb, []int{1}
}

func (m *NoticeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NoticeResponse.Unmarshal(m, b)
}
func (m *NoticeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NoticeResponse.Marshal(b, m, deterministic)
}
func (m *NoticeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NoticeResponse.Merge(m, src)
}
func (m *NoticeResponse) XXX_Size() int {
	return xxx_messageInfo_NoticeResponse.Size(m)
}
func (m *NoticeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NoticeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NoticeResponse proto.InternalMessageInfo

func (m *NoticeResponse) GetOutput() string {
	if m != nil {
		return m.Output
	}
	return ""
}

func (m *NoticeResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func init() {
	proto.RegisterType((*NoticeRequest)(nil), "rpc.NoticeRequest")
	proto.RegisterType((*NoticeResponse)(nil), "rpc.NoticeResponse")
}

func init() { proto.RegisterFile("notice.proto", fileDescriptor_642492014393dbdb) }

var fileDescriptor_642492014393dbdb = []byte{
	// 163 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xc9, 0xcb, 0x2f, 0xc9,
	0x4c, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2e, 0x2a, 0x48, 0x56, 0xd2, 0xe4,
	0xe2, 0xf5, 0x03, 0x0b, 0x06, 0xa5, 0x16, 0x96, 0xa6, 0x16, 0x97, 0x08, 0x49, 0x70, 0xb1, 0x27,
	0xe7, 0xe7, 0xe6, 0x26, 0xe6, 0xa5, 0x48, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06, 0xc1, 0xb8, 0x4a,
	0x76, 0x5c, 0x7c, 0x30, 0xa5, 0xc5, 0x05, 0xf9, 0x79, 0xc5, 0xa9, 0x42, 0x62, 0x5c, 0x6c, 0xf9,
	0xa5, 0x25, 0x05, 0xa5, 0x25, 0x50, 0xa5, 0x50, 0x9e, 0x90, 0x08, 0x17, 0x6b, 0x6a, 0x51, 0x51,
	0x7e, 0x91, 0x04, 0x13, 0x58, 0x18, 0xc2, 0x31, 0xb2, 0xe2, 0x62, 0x83, 0xe8, 0x17, 0x32, 0xe0,
	0x62, 0x0e, 0x2a, 0xcd, 0x13, 0x12, 0xd2, 0x2b, 0x2a, 0x48, 0xd6, 0x43, 0xb1, 0x5e, 0x4a, 0x18,
	0x45, 0x0c, 0x62, 0x8f, 0x12, 0x83, 0x13, 0x47, 0x14, 0x9b, 0x9e, 0xbe, 0x75, 0x51, 0x41, 0x72,
	0x12, 0x1b, 0xd8, 0xf1, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x21, 0xa1, 0x6a, 0x69, 0xcc,
	0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// NoticeClient is the client API for Notice service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NoticeClient interface {
	Run(ctx context.Context, in *NoticeRequest, opts ...grpc.CallOption) (*NoticeResponse, error)
}

type noticeClient struct {
	cc *grpc.ClientConn
}

func NewNoticeClient(cc *grpc.ClientConn) NoticeClient {
	return &noticeClient{cc}
}

func (c *noticeClient) Run(ctx context.Context, in *NoticeRequest, opts ...grpc.CallOption) (*NoticeResponse, error) {
	out := new(NoticeResponse)
	err := c.cc.Invoke(ctx, "/rpc.Notice/Run", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NoticeServer is the server API for Notice service.
type NoticeServer interface {
	Run(context.Context, *NoticeRequest) (*NoticeResponse, error)
}

// UnimplementedNoticeServer can be embedded to have forward compatible implementations.
type UnimplementedNoticeServer struct {
}

func (*UnimplementedNoticeServer) Run(ctx context.Context, req *NoticeRequest) (*NoticeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Run not implemented")
}

func RegisterNoticeServer(s *grpc.Server, srv NoticeServer) {
	s.RegisterService(&_Notice_serviceDesc, srv)
}

func _Notice_Run_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NoticeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NoticeServer).Run(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Notice/Run",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NoticeServer).Run(ctx, req.(*NoticeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Notice_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.Notice",
	HandlerType: (*NoticeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Run",
			Handler:    _Notice_Run_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "notice.proto",
}
